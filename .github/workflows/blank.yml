# See this repo https://github.com/actions
# https://github.com/actions/cache
# https://github.com/actions/create-release




name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
    container: debian
    runs-on:  ubuntu-latest
    name: apt-get
    steps:
      - uses: actions/checkout@v2
      - name: apt-get
        run: apt update ; apt install -y build-essential zlib1g-dev uuid-dev libdigest-sha-perl libelf-dev bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget gnat cpio ccache pkg-config cmake libusb-1.0-0-dev autoconf texinfo ncurses-dev
      - uses: actions/checkout@v2
      - name: make qemu-coreboot
        run: |
          rm -rf build/make-4.2.1/ build/qemu-coreboot/* build/log/*    &&
          make --load 2 V=1 BOARD=qemu-coreboot                         &&
          cat build/qemu-coreboot/hashes.txt                            &&
          tar zcvf build/qemu-coreboot/logs.tar.gz build/log/*
      - name: Save cache
        uses: ./
        with:
          key: cache-${{ runner.os }}-${{ github.run_id }}
          path: |
             packages
             crossgcc
             build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            This is a test of creating a release
            - First Change
            - Second Change

      - name: Upload Release Asset x230
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/x230/hashes.txt
          asset_name: build/x230/hashes.txt
          asset_content_type: text/plain

# build/qemu-coreboot/hashes.txt
# build/x230/hashes.txt
# build/x230-flash/hashes.txt
# build/x230-hotp-verification/hashes.txt
